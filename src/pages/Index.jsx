import React, { useState } from "react";
import { Box, Button, VStack, Input, Heading, Select, Textarea, Text, Divider, useToast, Image, useColorMode } from "@chakra-ui/react";
import { FaMagic, FaBolt, FaSearchDollar, FaMusic, FaRegSave, FaPencilAlt } from "react-icons/fa";

const Index = () => {
  const { colorMode, toggleColorMode } = useColorMode();
  const [theme, setTheme] = useState("");
  const [artist, setArtist] = useState("");
  const [musicStyle, setMusicStyle] = useState("");
  const [composition, setComposition] = useState("");
  const toast = useToast();

  const handleWriteSong = () => {
    // AI songwriting logic would go here
    setComposition("Here would be the song lyrics generated by the AI...");
    toast({
      title: "Song Generated",
      description: "A new hit song has been created for you!",
      status: "success",
      duration: 5000,
      isClosable: true,
    });
  };

  const handleNextLine = () => {
    // Logic for writing the next line would go here
    setComposition((prev) => prev + "\nThis is the next line...");
  };

  const handleRhyme = () => {
    // Logic for finding a rhyme would go here
    toast({
      title: "Rhyme Found",
      description: "Words that rhyme with your input have been found!",
      status: "info",
      duration: 5000,
      isClosable: true,
    });
  };

  const handleCritiqueSong = () => {
    // AI song review logic would go here
    toast({
      title: "Song Critiqued",
      description: "Your song has been reviewed by AI!",
      status: "warning",
      duration: 5000,
      isClosable: true,
    });
  };

  const handleSaveComposition = () => {
    // Logic to save the composition would go here
    toast({
      title: "Composition Saved",
      description: "Your composition has been saved successfully!",
      status: "success",
      duration: 5000,
      isClosable: true,
    });
  };

  const [rhymeInput, setRhymeInput] = useState("");
  const [critiqueInput, setCritiqueInput] = useState("");

  return (
    <VStack spacing={4} align="stretch" m={8} bg={colorMode === "dark" ? "gray.800" : "white"} color={colorMode === "dark" ? "white" : "gray.800"}>
      <Button onClick={toggleColorMode} mb={4}>
        Toggle {colorMode === "light" ? "Dark" : "Light"}
      </Button>
      <Heading as="h1" size="xl" textAlign="center" bgGradient="linear(to-l, #7928CA, #FF0080)" bgClip="text">
        AI Songwriter Dashboard
      </Heading>

      <Divider my={4} borderColor={colorMode === "dark" ? "gray.600" : "gray.200"} />

      <Box>
        <Input placeholder="Theme" value={theme} onChange={(e) => setTheme(e.target.value)} />
        <Input mt={2} placeholder="Artist" value={artist} onChange={(e) => setArtist(e.target.value)} />
        <Select mt={2} placeholder="Music Style" value={musicStyle} onChange={(e) => setMusicStyle(e.target.value)}>
          <option value="pop">Pop</option>
          <option value="rock">Rock</option>
          <option value="hip-hop">Hip-Hop</option>
          <option value="jazz">Jazz</option>
          <option value="classical">Classical</option>
        </Select>
        <Button leftIcon={<FaMagic />} mt={2} colorScheme="teal" onClick={handleWriteSong}>
          Generate Song
        </Button>
      </Box>

      <Textarea value={composition} onChange={(e) => setComposition(e.target.value)} placeholder="Your composition will appear here..." size="sm" minHeight="200px" />

      <Box>
        <Button leftIcon={<FaBolt />} colorScheme="orange" onClick={handleNextLine}>
          Write the Next Line
        </Button>
        <Input placeholder="Help me Rhyme" value={rhymeInput} onChange={(e) => setRhymeInput(e.target.value)} mt={2} />
        <Button leftIcon={<FaPencilAlt />} colorScheme="purple" onClick={handleRhyme}>
          Help me Rhyme
        </Button>
        <Input placeholder="Critique my Song" value={critiqueInput} onChange={(e) => setCritiqueInput(e.target.value)} mt={2} />
        <Button leftIcon={<FaSearchDollar />} colorScheme="pink" onClick={handleCritiqueSong}>
          Critique my Song
        </Button>
        <Button leftIcon={<FaRegSave />} ml={2} colorScheme="blue" onClick={handleSaveComposition}>
          Save Composition
        </Button>
      </Box>

      <Divider my={4} />

      <Text fontSize="xl" fontWeight="bold">
        Monetization Plans
      </Text>
      {/* Monetization plans would be displayed here */}
      <Image src="https://images.unsplash.com/photo-1515940175183-6798529cb860?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w1MDcxMzJ8MHwxfHNlYXJjaHwxfHxhbGJ1bSUyMGNvdmVyJTIwZ2VuZXJhdG9yfGVufDB8fHx8MTcwOTMzOTE0OXww&ixlib=rb-4.0.3&q=80&w=1080" alt="Album Cover Generator" />

      <Button leftIcon={<FaMusic />} colorScheme="green" isFullWidth mt={2}>
        Create Your Song with Suno
      </Button>
      {/* Affiliate link would go here */}

      {/* Over the top features like Album Cover and Music Video generators would be added here */}
    </VStack>
  );
};

export default Index;
